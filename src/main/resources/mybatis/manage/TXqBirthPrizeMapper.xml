<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.manage.prize.mapper.TXqBirthPrizeMapper">
    
    <resultMap type="TXqBirthPrize" id="TXqBirthPrizeResult">
        <result property="id"    column="id"    />
        <result property="title"    column="title"    />
        <result property="introduced"    column="Introduced"    />
        <result property="content"    column="content"    />
        <result property="num"    column="num"    />
        <result property="state"    column="state"    />
        <result property="createBy"    column="create_by"    />
        <result property="createDate"    column="create_date"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateDate"    column="update_date"    />
    </resultMap>

    <sql id="selectTXqBirthPrizeVo">
        select id, title, Introduced, content, num, state, create_by, create_date, update_by, update_date from t_xq_birth_prize
    </sql>

    <select id="selectTXqBirthPrizeList" parameterType="TXqBirthPrize" resultMap="TXqBirthPrizeResult">
        <include refid="selectTXqBirthPrizeVo"/>
        <where>  
            <if test="title != null  and title != ''"> and title like concat('%', #{title}, '%')</if>
            <if test="state != null "> and state = #{state}</if>
        </where>
    </select>
    
    <select id="selectTXqBirthPrizeById" parameterType="Long" resultMap="TXqBirthPrizeResult">
        <include refid="selectTXqBirthPrizeVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertTXqBirthPrize" parameterType="TXqBirthPrize" useGeneratedKeys="true" keyProperty="id">
        insert into t_xq_birth_prize
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="title != null  and title != ''">title,</if>
            <if test="introduced != null  and introduced != ''">Introduced,</if>
            <if test="content != null  and content != ''">content,</if>
            <if test="num != null ">num,</if>
            <if test="state != null ">state,</if>
            <if test="createBy != null  and createBy != ''">create_by,</if>
            <if test="createDate != null ">create_date,</if>
            <if test="updateBy != null  and updateBy != ''">update_by,</if>
            <if test="updateDate != null ">update_date,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="title != null  and title != ''">#{title},</if>
            <if test="introduced != null  and introduced != ''">#{introduced},</if>
            <if test="content != null  and content != ''">#{content},</if>
            <if test="num != null ">#{num},</if>
            <if test="state != null ">#{state},</if>
            <if test="createBy != null  and createBy != ''">#{createBy},</if>
            <if test="createDate != null ">#{createDate},</if>
            <if test="updateBy != null  and updateBy != ''">#{updateBy},</if>
            <if test="updateDate != null ">#{updateDate},</if>
         </trim>
    </insert>

    <update id="updateTXqBirthPrize" parameterType="TXqBirthPrize">
        update t_xq_birth_prize
        <trim prefix="SET" suffixOverrides=",">
            <if test="title != null  and title != ''">title = #{title},</if>
            <if test="introduced != null  and introduced != ''">Introduced = #{introduced},</if>
            <if test="content != null  and content != ''">content = #{content},</if>
            <if test="num != null ">num = #{num},</if>
            <if test="state != null ">state = #{state},</if>
            <if test="createBy != null  and createBy != ''">create_by = #{createBy},</if>
            <if test="createDate != null ">create_date = #{createDate},</if>
            <if test="updateBy != null  and updateBy != ''">update_by = #{updateBy},</if>
            <if test="updateDate != null ">update_date = #{updateDate},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteTXqBirthPrizeById" parameterType="Long">
        delete from t_xq_birth_prize where id = #{id}
    </delete>

    <delete id="deleteTXqBirthPrizeByIds" parameterType="String">
        delete from t_xq_birth_prize where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
</mapper>